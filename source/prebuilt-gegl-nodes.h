#ifndef _prebuilt_gegl_nodes_h_
#define _prebuilt_gegl_nodes_h_
struct Node;

static Node* create_node_by_name(char *name);
static Node* create_node__gegl_absolute();
static Node* create_node__gegl_add();
static Node* create_node__gegl_alien_map();
static Node* create_node__gegl_antialias();
static Node* create_node__gegl_apply_lens();
static Node* create_node__gegl_bayer_matrix();
static Node* create_node__gegl_bilateral_filter();
static Node* create_node__gegl_bloom();
static Node* create_node__gegl_border_align();
static Node* create_node__gegl_box_blur();
static Node* create_node__gegl_brightness_contrast();
static Node* create_node__gegl_buffer_sink();
static Node* create_node__gegl_buffer_source();
static Node* create_node__gegl_bump_map();
static Node* create_node__gegl_c2g();
static Node* create_node__gegl_cache();
static Node* create_node__gegl_cartoon();
static Node* create_node__gegl_cast_format();
static Node* create_node__gegl_cast_space();
static Node* create_node__gegl_cell_noise();
static Node* create_node__gegl_channel_mixer();
static Node* create_node__gegl_checkerboard();
static Node* create_node__gegl_clone();
static Node* create_node__gegl_color();
static Node* create_node__gegl_color_assimilation_grid();
static Node* create_node__gegl_color_enhance();
static Node* create_node__gegl_color_exchange();
static Node* create_node__gegl_color_overlay();
static Node* create_node__gegl_color_rotate();
static Node* create_node__gegl_color_temperature();
static Node* create_node__gegl_color_to_alpha();
static Node* create_node__gegl_color_warp();
static Node* create_node__gegl_component_extract();
static Node* create_node__gegl_contrast_curve();
static Node* create_node__gegl_convert_format();
static Node* create_node__gegl_convert_space();
static Node* create_node__gegl_convolution_matrix();
static Node* create_node__gegl_copy_buffer();
static Node* create_node__gegl_crop();
static Node* create_node__gegl_cubism();
static Node* create_node__gegl_deinterlace();
static Node* create_node__gegl_difference_of_gaussians();
static Node* create_node__gegl_diffraction_patterns();
static Node* create_node__gegl_displace();
static Node* create_node__gegl_display();
static Node* create_node__gegl_distance_transform();
static Node* create_node__gegl_dither();
static Node* create_node__gegl_divide();
static Node* create_node__gegl_domain_transform();
static Node* create_node__gegl_dropshadow();
static Node* create_node__gegl_edge();
static Node* create_node__gegl_edge_laplace();
static Node* create_node__gegl_edge_neon();
static Node* create_node__gegl_edge_sobel();
static Node* create_node__gegl_emboss();
static Node* create_node__gegl_engrave();
static Node* create_node__gegl_exp_combine();
static Node* create_node__gegl_exposure();
static Node* create_node__gegl_exr_load();
static Node* create_node__gegl_exr_save();
static Node* create_node__gegl_fattal02();
static Node* create_node__gegl_ff_load();
static Node* create_node__gegl_ff_save();
static Node* create_node__gegl_fill_path();
static Node* create_node__gegl_focus_blur();
static Node* create_node__gegl_fractal_explorer();
static Node* create_node__gegl_fractal_trace();
static Node* create_node__gegl_gamma();
static Node* create_node__gegl_gaussian_blur();
static Node* create_node__gegl_gaussian_blur_selective();
static Node* create_node__gegl_gblur_1d();
static Node* create_node__gegl_gegl();
static Node* create_node__gegl_gegl_buffer_load();
static Node* create_node__gegl_gegl_buffer_save();
static Node* create_node__gegl_gif_load();
static Node* create_node__gegl_gray();
static Node* create_node__gegl_grid();
static Node* create_node__gegl_high_pass();
static Node* create_node__gegl_hue_chroma();
static Node* create_node__gegl_icc_load();
static Node* create_node__gegl_icc_save();
static Node* create_node__gegl_illusion();
static Node* create_node__gegl_image_compare();
static Node* create_node__gegl_image_gradient();
static Node* create_node__gegl_introspect();
static Node* create_node__gegl_invert_gamma();
static Node* create_node__gegl_invert_linear();
static Node* create_node__gegl_jp2_load();
static Node* create_node__gegl_jpg_load();
static Node* create_node__gegl_jpg_save();
static Node* create_node__gegl_json_dropshadow2();
static Node* create_node__gegl_json_grey2();
static Node* create_node__gegl_layer();
static Node* create_node__gegl_lcms_from_profile();
static Node* create_node__gegl_lens_blur();
static Node* create_node__gegl_lens_distortion();
static Node* create_node__gegl_lens_flare();
static Node* create_node__gegl_levels();
static Node* create_node__gegl_linear_gradient();
static Node* create_node__gegl_linear_sinusoid();
static Node* create_node__gegl_load();
static Node* create_node__gegl_long_shadow();
static Node* create_node__gegl_magick_load();
static Node* create_node__gegl_mantiuk06();
static Node* create_node__gegl_map_absolute();
static Node* create_node__gegl_map_relative();
static Node* create_node__gegl_matting_global();
static Node* create_node__gegl_matting_levin();
static Node* create_node__gegl_maze();
static Node* create_node__gegl_mblur();
static Node* create_node__gegl_mean_curvature_blur();
static Node* create_node__gegl_median_blur();
static Node* create_node__gegl_mirrors();
static Node* create_node__gegl_mix();
static Node* create_node__gegl_mono_mixer();
static Node* create_node__gegl_mosaic();
static Node* create_node__gegl_motion_blur_circular();
static Node* create_node__gegl_motion_blur_linear();
static Node* create_node__gegl_motion_blur_zoom();
static Node* create_node__gegl_multiply();
static Node* create_node__gegl_negative_darkroom();
static Node* create_node__gegl_newsprint();
static Node* create_node__gegl_noise_cie_lch();
static Node* create_node__gegl_noise_hsv();
static Node* create_node__gegl_noise_hurl();
static Node* create_node__gegl_noise_pick();
static Node* create_node__gegl_noise_reduction();
static Node* create_node__gegl_noise_rgb();
static Node* create_node__gegl_noise_slur();
static Node* create_node__gegl_noise_solid();
static Node* create_node__gegl_noise_spread();
static Node* create_node__gegl_nop();
static Node* create_node__gegl_normal_map();
static Node* create_node__gegl_npd();
static Node* create_node__gegl_npy_save();
static Node* create_node__gegl_oilify();
static Node* create_node__gegl_opacity();
static Node* create_node__gegl_open_buffer();
static Node* create_node__gegl_pack();
static Node* create_node__gegl_panorama_projection();
static Node* create_node__gegl_path();
static Node* create_node__gegl_pdf_load();
static Node* create_node__gegl_perlin_noise();
static Node* create_node__gegl_photocopy();
static Node* create_node__gegl_piecewise_blend();
static Node* create_node__gegl_pixbuf();
static Node* create_node__gegl_pixelize();
static Node* create_node__gegl_plasma();
static Node* create_node__gegl_png_load();
static Node* create_node__gegl_png_save();
static Node* create_node__gegl_polar_coordinates();
static Node* create_node__gegl_posterize();
static Node* create_node__gegl_ppm_load();
static Node* create_node__gegl_ppm_save();
static Node* create_node__gegl_radial_gradient();
static Node* create_node__gegl_raw_load();
static Node* create_node__gegl_rectangle();
static Node* create_node__gegl_recursive_transform();
static Node* create_node__gegl_red_eye_removal();
static Node* create_node__gegl_reflect();
static Node* create_node__gegl_reinhard05();
static Node* create_node__gegl_remap();
static Node* create_node__gegl_reset_origin();
static Node* create_node__gegl_rgb_clip();
static Node* create_node__gegl_rgbe_load();
static Node* create_node__gegl_rgbe_save();
static Node* create_node__gegl_ripple();
static Node* create_node__gegl_rotate();
static Node* create_node__gegl_rotate_on_center();
static Node* create_node__gegl_saturation();
static Node* create_node__gegl_save();
static Node* create_node__gegl_save_pixbuf();
static Node* create_node__gegl_scale_ratio();
static Node* create_node__gegl_scale_size();
static Node* create_node__gegl_scale_size_keepaspect();
static Node* create_node__gegl_sdl2_display();
static Node* create_node__gegl_seamless_clone();
static Node* create_node__gegl_seamless_clone_compose();
static Node* create_node__gegl_sepia();
static Node* create_node__gegl_shadows_highlights();
static Node* create_node__gegl_shadows_highlights_correction();
static Node* create_node__gegl_shear();
static Node* create_node__gegl_shift();
static Node* create_node__gegl_simplex_noise();
static Node* create_node__gegl_sinus();
static Node* create_node__gegl_slic();
static Node* create_node__gegl_snn_mean();
static Node* create_node__gegl_soft_light();
static Node* create_node__gegl_softglow();
static Node* create_node__gegl_spherize();
static Node* create_node__gegl_spiral();
static Node* create_node__gegl_stereographic_projection();
static Node* create_node__gegl_stress();
static Node* create_node__gegl_stretch_contrast();
static Node* create_node__gegl_stretch_contrast_hsv();
static Node* create_node__gegl_subtract();
static Node* create_node__gegl_supernova();
static Node* create_node__gegl_svg_huerotate();
static Node* create_node__gegl_svg_load();
static Node* create_node__gegl_svg_luminancetoalpha();
static Node* create_node__gegl_svg_matrix();
static Node* create_node__gegl_svg_saturate();
static Node* create_node__gegl_text();
static Node* create_node__gegl_texturize_canvas();
static Node* create_node__gegl_threshold();
static Node* create_node__gegl_tiff_load();
static Node* create_node__gegl_tiff_save();
static Node* create_node__gegl_tile();
static Node* create_node__gegl_tile_glass();
static Node* create_node__gegl_tile_paper();
static Node* create_node__gegl_tile_seamless();
static Node* create_node__gegl_transform();
static Node* create_node__gegl_translate();
static Node* create_node__gegl_unpremultiply();
static Node* create_node__gegl_unsharp_mask();
static Node* create_node__gegl_v4l();
static Node* create_node__gegl_value_invert();
static Node* create_node__gegl_value_propagate();
static Node* create_node__gegl_variable_blur();
static Node* create_node__gegl_vector_stroke();
static Node* create_node__gegl_video_degradation();
static Node* create_node__gegl_vignette();
static Node* create_node__gegl_warp();
static Node* create_node__gegl_waterpixels();
static Node* create_node__gegl_watershed_transform();
static Node* create_node__gegl_wavelet_blur();
static Node* create_node__gegl_wavelet_blur_1d();
static Node* create_node__gegl_waves();
static Node* create_node__gegl_webp_load();
static Node* create_node__gegl_webp_save();
static Node* create_node__gegl_weighted_blend();
static Node* create_node__gegl_whirl_pinch();
static Node* create_node__gegl_wind();
static Node* create_node__gegl_write_buffer();
static Node* create_node__svg_clear();
static Node* create_node__svg_color_burn();
static Node* create_node__svg_color_dodge();
static Node* create_node__svg_darken();
static Node* create_node__svg_difference();
static Node* create_node__svg_dst();
static Node* create_node__svg_dst_atop();
static Node* create_node__svg_dst_in();
static Node* create_node__svg_dst_out();
static Node* create_node__svg_dst_over();
static Node* create_node__svg_exclusion();
static Node* create_node__svg_hard_light();
static Node* create_node__svg_lighten();
static Node* create_node__svg_overlay();
static Node* create_node__svg_plus();
static Node* create_node__svg_screen();
static Node* create_node__svg_src();
static Node* create_node__svg_src_atop();
static Node* create_node__svg_src_in();
static Node* create_node__svg_src_out();
static Node* create_node__svg_src_over();
static Node* create_node__svg_xor();
#endif /*_prebuilt_gegl_nodes_h_*/
